openapi: 3.0.3
info:
  title: Delivery Optimizer API
  version: 1.0.0
  description: API documentation for Delivery Optimizer

servers:
  - url: http://localhost:8081
    description: Local server

paths:
  /api/vehicles:
    get:
      summary: Get all vehicles
      description: Returns a list of all vehicles
      responses:
        '200':
          description: List of vehicles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VehicleDTO'

    post:
      summary: Create a new vehicle
      description: Adds a new vehicle to the system
      requestBody:
        description: Vehicle object to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleDTO'
            example:
              name: "Truck A"
              type: "TRUCK"
              maxWeight: 5000
              maxVolume: 12.5
              maxDeliveries: 10
      responses:
        '201':
          description: Vehicle created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleDTO'

  /api/vehicles/{id}:
    get:
      summary: Get vehicle by ID
      description: Returns a single vehicle by its unique ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the vehicle to retrieve
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        '200':
          description: Vehicle retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleDTO'
        '404':
          description: Vehicle not found

    put:
      summary: Update a vehicle
      description: Updates an existing vehicle by ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the vehicle to update
          schema:
            type: integer
            format: int64
            example: 1
      requestBody:
        description: Vehicle object to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleDTO'
            example:
              name: "Truck B"
              type: "TRUCK"
              maxWeight: 6000
              maxVolume: 15.0
              maxDeliveries: 12
      responses:
        '200':
          description: Vehicle updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleDTO'
        '404':
          description: Vehicle not found

    delete:
      summary: Delete a vehicle
      description: Deletes a vehicle by ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the vehicle to delete
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        '204':
          description: Vehicle deleted successfully
        '404':
          description: Vehicle not found

components:
  schemas:
    VehicleDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: "Truck A"
        type:
          type: string
          enum: ["TRUCK", "VAN", "BIKE"]
          example: "TRUCK"
        maxWeight:
          type: number
          format: double
          example: 5000.0
        maxVolume:
          type: number
          format: double
          example: 12.5
        maxDeliveries:
          type: integer
          example: 10
      required:
        - name
        - type
        - maxWeight
        - maxVolume
        - maxDeliveries
